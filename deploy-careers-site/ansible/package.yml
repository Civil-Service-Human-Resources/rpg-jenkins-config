# Given a release branch identifier, grab the contents and create a
# release package.
# TODO:
# Feed in the git release branch identifier
# Copy the result to bintray?
# rename the zip appropriately
# add details to release txt
---
- hosts: localhost

  vars_prompt:
  - name: "user"
    prompt: "Enter user name"


  vars:
    git_repo: git@github.com:Civil-Service-Human-Resources/rpg-careers-wp.git
    git_branch: release
    package_dest: ../deployment
    package_src: ../source
    package_folders:
    - mu-plugins
    - themes
    - plugins
    - sql

    path_wp_content: "{{package_dest}}/wp-content"
    path_mu_plugins: "{{path_wp_content}}/mu-plugins"
    path_plugins: "{{path_wp_content}}/plugins"
    path_themes: "{{path_wp_content}}/themes"
    path_sql: "{{path_wp_content}}/sql"

  tasks:


#
#   _____      _
#  / ____|    | |
# | (___   ___| |_ _   _ _ __
#  \___ \ / _ \ __| | | | '_ \
#  ____) |  __/ |_| |_| | |_) |
# |_____/ \___|\__|\__,_| .__/
#                       | |
#                       |_|

  - name: set var of todays date
    shell: date +%Y-%m-%d_%H-%M-%S
    register: shell_date
    tags:
    - setup
    - date
    - release_note

  - name: set the date fact
    set_fact:
      sysdate: "{{shell_date.stdout}}"
    tags:
    - date
    - release_note

  - name: debug the date
    debug:
      msg: "{{sysdate}}"
    tags:
    - setup
    - date


  - name: create the source directory
    file:
      path: "{{package_src}}"
      state: directory
      mode: 0755

  - name: create the deployment directory
    file:
      path: "{{package_dest}}/wp-content/{{item}}"
      state: directory
      mode: 0755
    with_items: "{{package_folders}}"

  - name: checkout the release branch
    git:
      repo: "git@github.com:Civil-Service-Human-Resources/rpg-careers-wp.git"
      dest: "{{package_src}}"
      version: "{{git_branch}}"


#  _____  _             _
#|  __ \| |           (_)
#| |__) | |_   _  __ _ _ _ __  ___
#|  ___/| | | | |/ _` | | '_ \/ __|
#| |    | | |_| | (_| | | | | \__ \
#|_|    |_|\__,_|\__, |_|_| |_|___/
#                 __/ |
#                |___/


  - name: move mu-plugins to package
    copy:
      src: "{{item}}"
      dest: "{{path_mu_plugins}}"
    with_fileglob:
    - "{{package_src}}/mu-plugins/*.php"

  - name: create forked plugins directories in package plugins directory
    file:
      path: "{{path_plugins}}/{{item.path}}"
      state: directory
    with_filetree:
    - "{{package_src}}/third-party-plugins-forked/"
    when: item.state == 'directory'
    no_log: true

  - name: copy forked plugin files to package directory
    copy:
      src: "{{item.src}}"
      dest: "{{path_plugins}}/{{item.path}}"
    with_filetree:
    - "{{package_src}}/third-party-plugins-forked/"
    when: item.state == 'file'
    no_log: true

  - name: create standard plugins directories in package plugins directory
    file:
      path: "{{path_plugins}}/{{item.path}}"
      state: directory
    with_filetree:
    - "{{package_src}}/third-party-plugins/"
    when: item.state == 'directory'
    no_log: true

  - name: copy plugin files to package directory
    copy:
      src: "{{item.src}}"
      dest: "{{path_plugins}}/{{item.path}}"
    with_filetree:
    - "{{package_src}}/third-party-plugins/"
    when: item.state == 'file'
    no_log: true


#  _______ _
# |__   __| |
#    | |  | |__   ___ _ __ ___   ___  ___
#    | |  | '_ \ / _ \ '_ ` _ \ / _ \/ __|
#    | |  | | | |  __/ | | | | |  __/\__ \
#    |_|  |_| |_|\___|_| |_| |_|\___||___/
#
#
#

  - name: create themes directory in package
    file:
      path: "{{path_themes}}/{{item.path}}"
      state: directory
    with_filetree:
    - "{{package_src}}/theme/"
    when: item.state == 'directory'
    no_log: true

  - name: copy theme directory to package
    copy:
      src: "{{item.src}}"
      dest: "{{path_themes}}/{{item.path}}"
    with_filetree:
    - "{{package_src}}/theme/"
    when: item.state == 'file'
    no_log: true

  - name: copy wp-config to root of package
    copy:
      src: "{{package_src}}/wp-config/wp-config.php"
      dest: "{{package_dest}}/"


#  _____      _                                   _
# |  __ \    | |                                 | |
# | |__) |___| | ___  __ _ ___  ___   _ __   ___ | |_ ___
# |  _  // _ \ |/ _ \/ _` / __|/ _ \ | '_ \ / _ \| __/ _ \
# | | \ \  __/ |  __/ (_| \__ \  __/ | | | | (_) | ||  __/
# |_|  \_\___|_|\___|\__,_|___/\___| |_| |_|\___/ \__\___|
#
#

  - name: get the current commit
    shell: cd {{package_src}} && git rev-parse --verify HEAD
    register: shell_git_commit
    tags:
    - release_note

  - name: create a release note file
    file:
      path: "{{package_dest}}/release_note.txt"
      state: touch
    tags:
    - release_note

  - name: create a release note file
    blockinfile:
      path: "{{package_dest}}/release_note.txt"
      block: |
        Date          {{sysdate}}
        Built by      {{user}}
        Branch        {{git_branch}}
        Git commit    {{shell_git_commit.stdout}}

    tags:
    - release_note



#      _
#     (_)
#  _____ _ __
# |_  / | '_ \
#  / /| | |_) |
# /___|_| .__/
#       | |
#       |_|


  - name: create a zip
    archive:
      path: "{{package_dest}}/"
      dest: "./career-site_release_{{sysdate}}.zip"
      format: zip
    tags:
    - zip
